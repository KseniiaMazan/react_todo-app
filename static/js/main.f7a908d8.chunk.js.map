{"version":3,"sources":["Components/NewTodo/NewTodo.js","Components/PropTypes/PropTypes.js","Components/TodoItem/TodoItem.js","Components/TodoList/TodoList.js","Components/TodosFilter/TodosFilter.js","App.js","index.js"],"names":["uuidv1","PropTypes","func","string","bool","arrayOf","shape","title","id","completed","require","NewTodo","state","titleOfTodo","handleChangeInput","_ref","target","_this","setState","value","handleInputTodo","event","preventDefault","addNewTodo","props","this","react_default","a","createElement","className","onSubmit","placeholder","onChange","React","Component","TodoItem","isEditing","editedFilmTitle","todoTitle","handleDoubleClick","handleChangeEdit","onEditChange","handleEditSubmit","_this$props","handleDoubleClickEditTitle","todoId","handleDeleteTodo","_this2","_this$props2","todoStatus","handleTodoStatus","liClassName","cx","editing","type","e","onBlur","checked","onDoubleClick","htmlFor","onClick","TodoList","todosList","length","map","_ref2","Components_TodoItem_TodoItem","key","TodosFilter","handleButtonChange","originalTodos","buttonSelected","handleDeleteAllCompleted","buttonClearStyles","disable","some","todo","footerStyles","hidden","filter","href","App","todos","handleAddNewTodo","prevState","concat","Object","toConsumableArray","filmTitle","_objectSpread","orTodo","handleCompletedAll","every","JSON","parse","localStorage","getItem","setItem","stringify","_this$state","Components_NewTodo_NewTodo","style","display","Components_TodoList_TodoList","Components_TodosFilter_TodosFilter","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f7a908d8.chunk.js","sourcesContent":["import React from 'react';\nimport { NewTodoProps } from '../PropTypes/PropTypes';\n\nconst uuidv1 = require('uuid/v1');\n\nclass NewTodo extends React.Component {\n  state = {\n    titleOfTodo: '',\n  }\n\n  handleChangeInput = ({ target }) => {\n    this.setState({\n      titleOfTodo: target.value,\n    });\n  }\n\n  handleInputTodo = (event) => {\n    event.preventDefault();\n    const { addNewTodo } = this.props;\n    const { titleOfTodo } = this.state;\n\n    addNewTodo({\n      title: titleOfTodo,\n      id: uuidv1(),\n      completed: false,\n    });\n\n    this.setState({\n      titleOfTodo: '',\n    });\n  }\n\n  render() {\n    const { titleOfTodo } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.handleInputTodo}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.handleChangeInput}\n            value={titleOfTodo}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nNewTodo.propTypes = NewTodoProps;\n\nexport default NewTodo;\n","import PropTypes from 'prop-types';\n\nexport const NewTodoProps = {\n  addNewTodo: PropTypes.func,\n};\n\nexport const TodoItemProps = {\n  todoTitle: PropTypes.string,\n  todoStatus: PropTypes.bool,\n  todoId: PropTypes.string,\n  handleTodoStatus: PropTypes.func,\n  handleDeleteTodo: PropTypes.func,\n};\n\nexport const TodoListProps = {\n  todosList: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    completed: PropTypes.bool,\n  })),\n  handleTodoStatus: PropTypes.func,\n  handleDeleteTodo: PropTypes.func,\n  handleDoubleClickEditTitle: PropTypes.func,\n};\n\nexport const TodosFilterProps = {\n  handleButtonChange: PropTypes.func,\n  originalTodos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    completed: PropTypes.bool,\n  })),\n  todosList: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    completed: PropTypes.bool,\n  })),\n  buttonSelected: PropTypes.string,\n  handleDeleteAllCompleted: PropTypes.func,\n};\n","import React from 'react';\nimport cx from 'classnames';\nimport { TodoItemProps } from '../PropTypes/PropTypes';\n\nclass TodoItem extends React.Component {\n  state = {\n    isEditing: false,\n    editedFilmTitle: this.props.todoTitle,\n  }\n\n  handleDoubleClick = () => {\n    this.setState({\n      isEditing: true,\n    });\n  }\n\n  handleChangeEdit = () => {\n    this.setState({\n      isEditing: false,\n    });\n  }\n\n  onEditChange = ({ target }) => {\n    this.setState({\n      editedFilmTitle: target.value,\n    });\n  }\n\n  handleEditSubmit = () => {\n    const {\n      handleDoubleClickEditTitle,\n      todoId,\n      handleDeleteTodo,\n    } = this.props;\n    const { editedFilmTitle } = this.state;\n\n    this.setState({\n      isEditing: false,\n    });\n    if (editedFilmTitle !== '') {\n      handleDoubleClickEditTitle(editedFilmTitle, todoId);\n    } else {\n      handleDeleteTodo(todoId);\n    }\n  }\n\n  render() {\n    const {\n      todoTitle,\n      todoStatus,\n      todoId,\n      handleTodoStatus,\n      handleDeleteTodo,\n    } = this.props;\n    const { editedFilmTitle } = this.state;\n    const liClassName = cx({\n      editing: this.state.isEditing,\n      completed: todoStatus,\n    });\n\n    return (\n      <li className={liClassName}>\n        { !this.state.isEditing\n          ? (\n            <div className=\"view\">\n              <input\n                type=\"checkbox\"\n                className=\"toggle\"\n                id={todoId}\n                checked={todoStatus}\n                onChange={() => handleTodoStatus(todoId)}\n              />\n              <p\n                className=\"label\"\n                onDoubleClick={this.handleDoubleClick}\n                htmlFor={todoId}\n              >\n                {todoTitle}\n              </p>\n              <button\n                type=\"button\"\n                className=\"destroy\"\n                onClick={() => handleDeleteTodo(todoId)}\n              />\n            </div>\n          )\n          : (\n            <form\n              onSubmit={this.handleEditSubmit}\n            >\n              <input\n                type=\"text\"\n                className=\"edit\"\n                value={editedFilmTitle}\n                onChange={e => this.onEditChange(e)}\n                onBlur={this.handleChangeEdit}\n              />\n            </form>\n          )\n        }\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = TodoItemProps;\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { TodoListProps } from '../PropTypes/PropTypes';\n\nconst TodoList = ({\n  todosList,\n  handleTodoStatus,\n  handleDeleteTodo,\n  handleDoubleClickEditTitle,\n}) => (\n  <ul className=\"todo-list\">\n    {todosList.length\n      ? todosList\n        .map(({ title, completed, id }) => (\n          <TodoItem\n            handleDoubleClickEditTitle={handleDoubleClickEditTitle}\n            todoStatus={completed}\n            todoTitle={title}\n            handleTodoStatus={handleTodoStatus}\n            handleDeleteTodo={handleDeleteTodo}\n            key={id}\n            todoId={id}\n            todosList={todosList}\n          />\n        ))\n      : null\n    }\n  </ul>\n);\n\nTodoList.propTypes = TodoListProps;\n\nexport default TodoList;\n","import cx from 'classnames';\nimport React from 'react';\nimport { TodosFilterProps } from '../PropTypes/PropTypes';\n\nconst TodosFilter = ({\n  handleButtonChange,\n  todosList, originalTodos, buttonSelected, handleDeleteAllCompleted,\n}) => {\n  const buttonClearStyles = cx('clear-completed', {\n    disable: !todosList.some(todo => todo.completed),\n  });\n  const footerStyles = cx('footer', {\n    hidden: !originalTodos.length,\n  });\n\n  return (\n    <footer className={footerStyles}>\n      <span className=\"todo-count\">\n        {originalTodos.length && originalTodos\n          .filter(todo => !todo.completed).length }\n        {' items left'}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={buttonSelected === 'all' ? 'selected' : ''}\n            onClick={() => handleButtonChange('all')}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            onClick={() => handleButtonChange('active')}\n            className={buttonSelected === 'active' ? 'selected' : ''}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            onClick={() => handleButtonChange('completed')}\n            className={buttonSelected === 'completed' ? 'selected' : ''}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className={buttonClearStyles}\n        onClick={handleDeleteAllCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nTodosFilter.propTypes = TodosFilterProps;\n\nexport default TodosFilter;\n","import React from 'react';\nimport NewTodo from './Components/NewTodo/NewTodo';\nimport TodoList from './Components/TodoList/TodoList';\nimport TodosFilter from './Components/TodosFilter/TodosFilter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    originalTodos: [],\n    buttonSelected: 'all',\n  }\n\n  componentDidMount() {\n    this.setState({\n      todos: JSON.parse(localStorage.getItem('todosList')) || [],\n      originalTodos: JSON\n        .parse(localStorage.getItem('originalTodosList')) || [],\n    });\n  }\n\n  componentDidUpdate(prevState) {\n    const { todos } = this.state;\n\n    if (todos !== prevState.todos) {\n      localStorage.setItem('originalTodosList', JSON.stringify(todos));\n      localStorage.setItem('todosList', JSON.stringify(todos));\n    }\n  }\n\n  handleAddNewTodo = (todo) => {\n    if (todo.title.length > 0) {\n      this.setState(prevState => ({\n        todos: [...prevState.todos, todo],\n        originalTodos: [...prevState.originalTodos, todo],\n      }));\n    }\n\n    this.handleButtonChange(this.state.buttonSelected);\n  }\n\n  handleDoubleClickEditTitle = (filmTitle, todoId) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos]\n        .map(todo => (\n          todo.id === todoId\n            ? { ...todo, title: filmTitle }\n            : todo\n        )),\n      originalTodos: [...prevState.originalTodos]\n        .map(orTodo => (\n          orTodo.id === todoId\n            ? { ...orTodo, title: filmTitle }\n            : orTodo\n        )),\n    }));\n  }\n\n  handleDeleteTodo = (todoId) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos]\n        .filter(todo => (todo.id !== todoId)),\n      originalTodos: [...prevState.originalTodos]\n        . filter(todo => (todo.id !== todoId)),\n    }));\n  }\n\n  handleTodoStatus = (todoId) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos]\n        .map(todo => (\n          todo.id === todoId\n            ? { ...todo, completed: !todo.completed }\n            : todo\n        )),\n      originalTodos: [...prevState.originalTodos]\n        .map(orTodo => (\n          orTodo.id === todoId\n            ? { ...orTodo, completed: !orTodo.completed }\n            : orTodo\n        )),\n    }));\n\n    this.handleButtonChange(this.state.buttonSelected);\n  }\n\n  handleCompletedAll = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos]\n        .map(todo => ({\n          ...todo,\n          completed: !prevState.todos.every(({ completed }) => completed),\n        })),\n      originalTodos: [...prevState.originalTodos]\n        .map(orTodo => ({\n          ...orTodo,\n          completed: !prevState.originalTodos\n            .every(({ completed }) => completed),\n        })),\n    }));\n\n    this.handleButtonChange(this.state.buttonSelected);\n  }\n\n  handleButtonChange = (value) => {\n    switch (value) {\n      case 'all':\n        this.setState(prevState => ({\n          todos: [...prevState.originalTodos],\n          buttonSelected: 'all',\n        }));\n        break;\n      case 'active':\n        this.setState(prevState => ({\n          todos: [...prevState.originalTodos].filter(todo => !todo.completed),\n          buttonSelected: 'active',\n        }));\n        break;\n      case 'completed':\n        this.setState(prevState => ({\n          todos: [...prevState.originalTodos].filter(todo => todo.completed),\n          buttonSelected: 'completed',\n        }));\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleDeleteAllCompleted = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos].filter(todo => !todo.completed),\n      originalTodos: [...prevState.originalTodos]\n        .filter(todo => !todo.completed),\n    }));\n  }\n\n  render() {\n    const {\n      todos, originalTodos, buttonSelected,\n    } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <NewTodo addNewTodo={this.handleAddNewTodo} />\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.handleCompletedAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            todosList={todos}\n            handleTodoStatus={this.handleTodoStatus}\n            handleDeleteTodo={this.handleDeleteTodo}\n            handleDoubleClickEditTitle={this.handleDoubleClickEditTitle}\n          />\n        </section>\n        <TodosFilter\n          handleButtonChange={this.handleButtonChange}\n          originalTodos={originalTodos}\n          todosList={todos}\n          buttonSelected={buttonSelected}\n          handleDeleteAllCompleted={this.handleDeleteAllCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}