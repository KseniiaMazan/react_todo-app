{"version":3,"sources":["Components/NewTodo/NewTodo.js","Components/PropTypes/PropTypes.js","Components/TodoItem/TodoItem.js","Components/TodoList/TodoList.js","Components/TodosFilter/TodosFilter.js","App.js","index.js"],"names":["_","PropTypes","func","string","bool","arrayOf","shape","title","id","completed","require","NewTodo","state","titleOfTodo","handleChangeInput","_ref","target","_this","setState","value","handleInputTodo","event","preventDefault","addNewTodo","props","uniqueId","this","react_default","a","createElement","className","onSubmit","placeholder","onChange","React","Component","TodoItem","_this$props","todoTitle","todoStatus","todoId","handleTodoStatus","handleDeleteTodo","liClassName","cx","type","checked","htmlFor","onClick","TodoList","todosList","handleDoubleClickEditTitle","length","map","_ref2","Components_TodoItem_TodoItem","key","TodosFilter","onButtonAllChange","onButtonCompletedChange","onButtonActiveChange","originalTodos","buttonSelected","handleDeleteAllCompleted","buttonClearStyles","disable","some","todo","footerStyles","hidden","filter","href","App","todos","handleAddNewTodo","prevState","concat","Object","toConsumableArray","handleActiveTodos","handleCompletedTodos","_objectSpread","orTodo","handleCompletedAll","handleShowAllTodos","_this$state","Components_NewTodo_NewTodo","style","display","Components_TodoList_TodoList","Components_TodosFilter_TodosFilter","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f2ebdaf0.chunk.js","sourcesContent":["import React from 'react';\nimport { NewTodoProps } from '../PropTypes/PropTypes';\n\nconst _ = require('lodash');\n\nclass NewTodo extends React.Component {\n  state = {\n    titleOfTodo: '',\n  }\n\n  handleChangeInput = ({ target }) => {\n    this.setState({\n      titleOfTodo: target.value,\n    });\n  }\n\n  handleInputTodo = (event) => {\n    event.preventDefault();\n    const { addNewTodo } = this.props;\n    const { titleOfTodo } = this.state;\n\n    addNewTodo({\n      title: titleOfTodo,\n      id: _.uniqueId('id_'),\n      completed: false,\n    });\n    this.setState({\n      titleOfTodo: '',\n    });\n  }\n\n  render() {\n    const { titleOfTodo } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.handleInputTodo}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.handleChangeInput}\n            value={titleOfTodo}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nNewTodo.propTypes = NewTodoProps;\n\nexport default NewTodo;\n","import PropTypes from 'prop-types';\n\nexport const NewTodoProps = {\n  addNewTodo: PropTypes.func,\n};\n\nexport const TodoItemProps = {\n  todoTitle: PropTypes.string,\n  todoStatus: PropTypes.bool,\n  todoId: PropTypes.string,\n  handleTodoStatus: PropTypes.func,\n  handleDeleteTodo: PropTypes.func,\n};\n\nexport const TodoListProps = {\n  todosList: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    completed: PropTypes.bool,\n  })),\n  handleTodoStatus: PropTypes.func,\n  handleDeleteTodo: PropTypes.func,\n  handleDoubleClickEditTitle: PropTypes.func,\n};\n\nexport const TodosFilterProps = {\n  onButtonAllChange: PropTypes.func,\n  onButtonCompletedChange: PropTypes.func,\n  onButtonActiveChange: PropTypes.func,\n  originalTodos: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    completed: PropTypes.bool,\n  })),\n  todosList: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    completed: PropTypes.bool,\n  })),\n  buttonSelected: PropTypes.string,\n  handleDeleteAllCompleted: PropTypes.func,\n};\n","import React from 'react';\nimport cx from 'classnames';\nimport { TodoItemProps } from '../PropTypes/PropTypes';\n\nclass TodoItem extends React.Component {\n  // state = {\n  //   isEditing: false,\n  // }\n\n  // handleDoubleClick = () => {\n  //   this.setState({\n  //     isEditing: true,\n  //   });\n  // }\n\n  render() {\n    const {\n      todoTitle, todoStatus, todoId, handleTodoStatus, handleDeleteTodo,\n    } = this.props;\n    const liClassName = cx({\n      // editing: this.state.isEditing,\n      completed: todoStatus,\n    });\n\n    return (\n      <li className={liClassName}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={todoId}\n            checked={todoStatus}\n            onChange={() => handleTodoStatus(todoId)}\n          />\n          <label\n            // onDoubleClick={this.handleDoubleClick}\n            htmlFor={todoId}\n          >\n            {todoTitle}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => handleDeleteTodo(todoId)}\n          />\n        </div>\n        {/* <form\n          onSubmit={event => handleDoubleClickEditTitle(event, todoId)}\n        >\n          <input type=\"text\" className=\"edit\" />\n        </form> */}\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = TodoItemProps;\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\nimport { TodoListProps } from '../PropTypes/PropTypes';\n\nconst TodoList = ({\n  todosList, handleTodoStatus, handleDeleteTodo, handleDoubleClickEditTitle,\n}) => (\n  <ul className=\"todo-list\">\n    {todosList.length\n      ? todosList\n        .map(({ title, completed, id }) => (\n          <TodoItem\n            handleDoubleClickEditTitle={handleDoubleClickEditTitle}\n            todoStatus={completed}\n            todoTitle={title}\n            handleTodoStatus={handleTodoStatus}\n            handleDeleteTodo={handleDeleteTodo}\n            key={id}\n            todoId={id}\n          />\n        ))\n      : null\n    }\n  </ul>\n);\n\nTodoList.propTypes = TodoListProps;\n\nexport default TodoList;\n","import cx from 'classnames';\nimport React from 'react';\nimport { TodosFilterProps } from '../PropTypes/PropTypes';\n\nconst TodosFilter = ({\n  onButtonAllChange, onButtonCompletedChange, onButtonActiveChange,\n  todosList, originalTodos, buttonSelected, handleDeleteAllCompleted,\n}) => {\n  const buttonClearStyles = cx('clear-completed', {\n    disable: !todosList.some(todo => todo.completed),\n  });\n  const footerStyles = cx('footer', {\n    hidden: !originalTodos.length,\n  });\n\n  return (\n    <footer className={footerStyles}>\n      <span className=\"todo-count\">\n        {originalTodos.length && originalTodos\n          .filter(todo => !todo.completed).length }\n        {' items left'}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={buttonSelected === 'all' && 'selected'}\n            onClick={onButtonAllChange}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            onClick={onButtonActiveChange}\n            className={buttonSelected === 'active' && 'selected'}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            onClick={onButtonCompletedChange}\n            className={buttonSelected === 'completed' && 'selected'}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className={buttonClearStyles}\n        onClick={handleDeleteAllCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n\nTodosFilter.propTypes = TodosFilterProps;\n\nexport default TodosFilter;\n","import React from 'react';\nimport NewTodo from './Components/NewTodo/NewTodo';\nimport TodoList from './Components/TodoList/TodoList';\nimport TodosFilter from './Components/TodosFilter/TodosFilter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    originalTodos: [],\n    buttonSelected: 'all',\n  }\n  // componentDidMount() {\n\n  // }\n  handleAddNewTodo = (todo) => {\n    if (todo.title.length > 0) {\n      this.setState(prevState => ({\n        todos: [...prevState.todos, todo],\n        originalTodos: [...prevState.originalTodos, todo],\n      }));\n    }\n\n    if (this.state.buttonSelected === 'active') {\n      this.handleActiveTodos();\n    }\n\n    if (this.state.buttonSelected === 'completed') {\n      this.handleCompletedTodos();\n    }\n  }\n\n  handleDoubleClickEditTitle = ({ target }, todoId) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos]\n        .map(todo => (\n          todo.id === todoId\n            ? { ...todo, title: target.value }\n            : todo\n        )),\n      originalTodos: [...prevState.originalTodos]\n        .map(orTodo => (\n          orTodo.id === todoId\n            ? { ...orTodo, title: target.value }\n            : orTodo\n        )),\n    }));\n  }\n\n  handleDeleteTodo = (todoId) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos]\n        .filter(todo => (todo.id !== todoId)),\n      originalTodos: [...prevState.originalTodos]\n        . filter(todo => (todo.id !== todoId)),\n    }));\n  }\n\n  handleTodoStatus = (todoId) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos]\n        .map(todo => (\n          todo.id === todoId\n            ? { ...todo, completed: !todo.completed }\n            : todo\n        )),\n      originalTodos: [...prevState.originalTodos]\n        .map(orTodo => (\n          orTodo.id === todoId\n            ? { ...orTodo, completed: !orTodo.completed }\n            : orTodo\n        )),\n    }));\n\n    if (this.state.buttonSelected === 'active') {\n      this.handleActiveTodos();\n    }\n\n    if (this.state.buttonSelected === 'completed') {\n      this.handleCompletedTodos();\n    }\n  }\n\n  handleCompletedAll = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos]\n        .map(todo => ({ ...todo, completed: !todo.completed })),\n      originalTodos: [...prevState.originalTodos]\n        .map(orTodo => ({ ...orTodo, completed: !orTodo.completed })),\n    }));\n\n    if (this.state.buttonSelected === 'active') {\n      this.handleActiveTodos();\n    }\n\n    if (this.state.buttonSelected === 'completed') {\n      this.handleCompletedTodos();\n    }\n  }\n\n  handleShowAllTodos = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.originalTodos],\n      buttonSelected: 'all',\n    }));\n  }\n\n  handleActiveTodos = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.originalTodos].filter(todo => !todo.completed),\n      buttonSelected: 'active',\n    }));\n  }\n\n  handleCompletedTodos = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.originalTodos].filter(todo => todo.completed),\n      buttonSelected: 'completed',\n    }));\n  }\n\n  handleDeleteAllCompleted = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos].filter(todo => !todo.completed),\n      originalTodos: [...prevState.originalTodos]\n        .filter(todo => !todo.completed),\n    }));\n  }\n\n  render() {\n    const {\n      todos, originalTodos, buttonSelected,\n    } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <NewTodo addNewTodo={this.handleAddNewTodo} />\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.handleCompletedAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            todosList={todos}\n            handleTodoStatus={this.handleTodoStatus}\n            handleDeleteTodo={this.handleDeleteTodo}\n            handleDoubleClickEditTitle={this.handleDoubleClickEditTitle}\n          />\n        </section>\n        <TodosFilter\n          onButtonAllChange={this.handleShowAllTodos}\n          onButtonCompletedChange={this.handleCompletedTodos}\n          onButtonActiveChange={this.handleActiveTodos}\n          originalTodos={originalTodos}\n          todosList={todos}\n          buttonSelected={buttonSelected}\n          handleDeleteAllCompleted={this.handleDeleteAllCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}