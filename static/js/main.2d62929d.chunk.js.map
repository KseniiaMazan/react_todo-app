{"version":3,"sources":["Components/NewTodo/NewTodo.js","Components/TodoItem/TodoItem.js","Components/TodoList/TodoList.js","Components/TodosFilter/TodosFilter.js","App.js","index.js"],"names":["_","require","NewTodo","state","titleOfTodo","handleChangeInput","_ref","target","_this","setState","value","handleInputTodo","event","preventDefault","addNewTodo","props","title","id","uniqueId","completed","this","react_default","a","createElement","className","onSubmit","placeholder","onChange","React","Component","TodoItem","todoTitle","todoId","onChangeCompleted","type","checked","htmlFor","TodoList","todosList","length","map","_ref2","Components_TodoItem_TodoItem","todoStatus","key","TodosFilter","onButtonAllChange","onButtonCompletedChange","onButtonActiveChange","style","display","filter","todo","href","onClick","App","todos","originalTodos","handleAddNewTodo","prevState","concat","Object","toConsumableArray","handleTodoStatus","_objectSpread","orTodo","handleShowAllTodos","handleActiveTodos","handleCompletedTodos","_this$state","Components_NewTodo_NewTodo","Components_TodoList_TodoList","Components_TodosFilter_TodosFilter","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2d62929d.chunk.js","sourcesContent":["import React from 'react';\nimport './NewTodo.css';\n\nconst _ = require('lodash');\n\nclass NewTodo extends React.Component {\n  state = {\n    titleOfTodo: '',\n  }\n\n  handleChangeInput = ({ target }) => {\n    this.setState({\n      titleOfTodo: target.value,\n    });\n  }\n\n  handleInputTodo = (event) => {\n    event.preventDefault();\n    const { addNewTodo } = this.props;\n    const { titleOfTodo } = this.state;\n\n    addNewTodo({\n      title: titleOfTodo,\n      id: _.uniqueId('id_'),\n      completed: false,\n    });\n    this.setState({\n      titleOfTodo: '',\n    });\n  }\n\n  render() {\n    const { titleOfTodo } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.handleInputTodo}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.handleChangeInput}\n            value={titleOfTodo}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default NewTodo;\n","import React from 'react';\n\nconst TodoItem = ({\n  todoTitle, completed, todoId, onChangeCompleted,\n}) => (\n  <li className=\"todo\">\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id=\"todo-1\"\n        checked={completed}\n        value={completed}\n        onChange={() => onChangeCompleted(todoId)}\n      />\n      <label htmlFor=\"todo-1\">{todoTitle}</label>\n      <button type=\"button\" className=\"destroy\" />\n    </div>\n  </li>\n);\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({ todosList, onChangeCompleted }) => (\n  <ul className=\"todo-list\">\n    {todosList.length\n      ? todosList\n        .map(({ title, completed, id }) => (\n          <TodoItem\n            todoStatus={completed}\n            todoTitle={title}\n            onChangeCompleted={onChangeCompleted}\n            key={id}\n            todoId={id}\n          />\n        ))\n      : null\n    }\n  </ul>\n);\n\nexport default TodoList;\n","import React from 'react';\n\nconst TodosFilter = ({\n  onButtonAllChange, onButtonCompletedChange, onButtonActiveChange, todosList,\n}) => (\n  <footer className=\"footer\" style={{ display: 'block' }}>\n    <span className=\"todo-count\">\n      {todosList.length && todosList.filter(todo => !todo.completed).length }\n      {' items left'}\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a href=\"#/\" className=\"selected\" onClick={onButtonAllChange}>All</a>\n      </li>\n\n      <li>\n        <a href=\"#/active\" onClick={onButtonActiveChange}>Active</a>\n      </li>\n\n      <li>\n        <a href=\"#/completed\" onClick={onButtonCompletedChange}>Completed</a>\n      </li>\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      style={{ display: 'block' }}\n    />\n  </footer>\n);\n\nexport default TodosFilter;\n","import React from 'react';\nimport NewTodo from './Components/NewTodo/NewTodo';\nimport TodoList from './Components/TodoList/TodoList';\nimport TodosFilter from './Components/TodosFilter/TodosFilter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    originalTodos: [],\n  }\n\n  handleAddNewTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n      originalTodos: [...prevState.originalTodos, todo],\n    }));\n  }\n\n  handleTodoStatus = (todoId) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos]\n        .map(todo => (\n          todo.id === todoId\n            ? { ...todo, completed: !todo.completed }\n            : todo\n        )),\n      originalTodos: [...prevState.originalTodos]\n        .map(orTodo => (\n          orTodo.id === todoId\n            ? { ...orTodo, completed: !orTodo.completed }\n            : orTodo\n        )),\n    }));\n  }\n\n  handleShowAllTodos = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.originalTodos],\n    }));\n  }\n\n  handleActiveTodos = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.originalTodos].filter(todo => !todo.completed),\n    }));\n  }\n\n  handleCompletedTodos = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.originalTodos].filter(todo => todo.completed),\n    }));\n  }\n\n  render() {\n    const { todos, originalTodos } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <NewTodo addNewTodo={this.handleAddNewTodo} />\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            todosList={todos}\n            onChangeCompleted={this.handleTodoStatus}\n          />\n        </section>\n        <TodosFilter\n          onButtonAllChange={this.handleShowAllTodos}\n          onButtonCompletedChange={this.handleCompletedTodos}\n          onButtonActiveChange={this.handleActiveTodos}\n          todosList={originalTodos}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}